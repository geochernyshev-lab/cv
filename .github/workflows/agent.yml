name: Agent – apply file blocks from issue comment

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  apply:
    # Запускаемся только если комментарий содержит /apply
    if: ${{ contains(github.event.comment.body, '/apply') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse file blocks from comment
        env:
          BODY: ${{ github.event.comment.body }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .agent
          python3 - <<'PY'
import os, re, json, sys
body = os.environ.get("BODY","")
# Формат блока: ```file=path/to/file\n<content>\n```
blocks = re.findall(r"```file=([^\n]+)\n([\s\S]*?)```", body)
if not blocks:
    print("No file blocks found in comment", file=sys.stderr)
paths = []
for path, content in blocks:
    path = path.strip()
    os.makedirs(os.path.dirname(path) or ".", exist_ok=True)
    with open(path, "w", encoding="utf-8") as f:
        f.write(content)
    paths.append(path)
with open(".agent/files.json","w",encoding="utf-8") as f:
    json.dump(paths,f)
print("Parsed files:", paths)
PY

      - name: Ensure files parsed
        shell: bash
        run: |
          test -f .agent/files.json || (echo "No files parsed." && exit 1)
          cat .agent/files.json || true

      - name: Create branch, commit, push
        id: commit
        env:
          BR: agent/${{ github.run_id }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "repo-agent[bot]"
          git config user.email "repo-agent[bot]@users.noreply.github.com"
          git checkout -b "$BR"
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Agent apply: $BR"
          git push -u origin "$BR"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Open Pull Request
        if: steps.commit.outputs.changed == 'true'
        id: pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const head = `agent/${{ github.run_id }}`;
            const base = "${{ github.event.repository.default_branch }}"; // целевая ветка (дефолтная)
            const {owner, repo} = context.repo;
            const res = await github.rest.pulls.create({
              owner, repo,
              head, base,
              title: "Agent: apply changes",
              body: "Автосоздано из комментария с `/apply`."
            });
            core.setOutput("number", res.data.number);
            core.info(`PR #${res.data.number} created`);

      - name: Enable auto-merge (optional)
        if: steps.commit.outputs.changed == 'true'
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.pr.outputs.number }}
          merge-method: squash
